import threading
import time
import random

# Número de filósofos
num_philosophers = 5

# Criação dos semáforos
forks = [threading.Semaphore() for _ in range(num_philosophers)]

def philosopher(num):
    left_fork = forks[num]
    right_fork = forks[(num + 1) % num_philosophers]

    while True:
        # Filósofo pensa
        time.sleep(random.uniform(1, 3))

        # Filósofo tenta pegar os garfos
        left_fork.acquire()
        right_fork.acquire()

        # Filósofo come
        print(f"Filósofo {num} está comendo.")
        time.sleep(random.uniform(1, 3))

        # Filósofo deixa os garfos
        right_fork.release()
        left_fork.release()

        # Filósofo pensa
        print(f"Filósofo {num} está pensando.")
        time.sleep(random.uniform(1, 3))

if __name__ == "__main__":
    # Criação dos filósofos como threads
    philosophers = [threading.Thread(target=philosopher, args=(i,)) for i in range(num_philosophers)]

    # Iniciação dos filósofos
    for p in philosophers:
        p.start()

    # Espera todas as threads terminarem
    for p in philosophers:
        p.join()
